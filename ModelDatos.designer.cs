#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartGardenP
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SmartGarden")]
	public partial class ModelDatosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertCargo(Cargo instance);
    partial void UpdateCargo(Cargo instance);
    partial void DeleteCargo(Cargo instance);
    partial void InsertArregloFloral(ArregloFloral instance);
    partial void UpdateArregloFloral(ArregloFloral instance);
    partial void DeleteArregloFloral(ArregloFloral instance);
    partial void InsertArregloFloral_Cliente(ArregloFloral_Cliente instance);
    partial void UpdateArregloFloral_Cliente(ArregloFloral_Cliente instance);
    partial void DeleteArregloFloral_Cliente(ArregloFloral_Cliente instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertPaisajismo(Paisajismo instance);
    partial void UpdatePaisajismo(Paisajismo instance);
    partial void DeletePaisajismo(Paisajismo instance);
    partial void InsertPaisajismo_Empleado(Paisajismo_Empleado instance);
    partial void UpdatePaisajismo_Empleado(Paisajismo_Empleado instance);
    partial void DeletePaisajismo_Empleado(Paisajismo_Empleado instance);
    partial void InsertSuministro(Suministro instance);
    partial void UpdateSuministro(Suministro instance);
    partial void DeleteSuministro(Suministro instance);
    partial void InsertTarea(Tarea instance);
    partial void UpdateTarea(Tarea instance);
    partial void DeleteTarea(Tarea instance);
    partial void InsertTarea_Empleado(Tarea_Empleado instance);
    partial void UpdateTarea_Empleado(Tarea_Empleado instance);
    partial void DeleteTarea_Empleado(Tarea_Empleado instance);
    partial void InsertTipo(Tipo instance);
    partial void UpdateTipo(Tipo instance);
    partial void DeleteTipo(Tipo instance);
    partial void InsertUnidad(Unidad instance);
    partial void UpdateUnidad(Unidad instance);
    partial void DeleteUnidad(Unidad instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public ModelDatosDataContext() : 
				base(global::SmartGardenP.Properties.Settings.Default.SmartGardenConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDatosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDatosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDatosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDatosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Cargo> Cargo
		{
			get
			{
				return this.GetTable<Cargo>();
			}
		}
		
		public System.Data.Linq.Table<ArregloFloral> ArregloFloral
		{
			get
			{
				return this.GetTable<ArregloFloral>();
			}
		}
		
		public System.Data.Linq.Table<ArregloFloral_Cliente> ArregloFloral_Cliente
		{
			get
			{
				return this.GetTable<ArregloFloral_Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Paisajismo> Paisajismo
		{
			get
			{
				return this.GetTable<Paisajismo>();
			}
		}
		
		public System.Data.Linq.Table<Paisajismo_Empleado> Paisajismo_Empleado
		{
			get
			{
				return this.GetTable<Paisajismo_Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Suministro> Suministro
		{
			get
			{
				return this.GetTable<Suministro>();
			}
		}
		
		public System.Data.Linq.Table<Tarea> Tarea
		{
			get
			{
				return this.GetTable<Tarea>();
			}
		}
		
		public System.Data.Linq.Table<Tarea_Empleado> Tarea_Empleado
		{
			get
			{
				return this.GetTable<Tarea_Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Tipo> Tipo
		{
			get
			{
				return this.GetTable<Tipo>();
			}
		}
		
		public System.Data.Linq.Table<Unidad> Unidad
		{
			get
			{
				return this.GetTable<Unidad>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ValidarUsuario")]
		public ISingleResult<ValidarUsuarioResult> ValidarUsuario([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string contrase)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usuario, contrase);
			return ((ISingleResult<ValidarUsuarioResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpID;
		
		private System.Nullable<int> _CargoID;
		
		private System.Nullable<System.DateTime> _Fecha_de_Contrato;
		
		private System.Nullable<decimal> _Salario;
		
		private string _Cargo;
		
		private string _Cedula;
		
		private string _Correo;
		
		private string _Telefono;
		
		private System.Nullable<System.DateTime> _FechaNac;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Genero;
		
		private EntitySet<ArregloFloral_Cliente> _ArregloFloral_Cliente;
		
		private EntitySet<Paisajismo_Empleado> _Paisajismo_Empleado;
		
		private EntitySet<Suministro> _Suministro;
		
		private EntitySet<Tarea_Empleado> _Tarea_Empleado;
		
		private EntityRef<Cargo> _Cargo1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(int value);
    partial void OnEmpIDChanged();
    partial void OnCargoIDChanging(System.Nullable<int> value);
    partial void OnCargoIDChanged();
    partial void OnFecha_de_ContratoChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_de_ContratoChanged();
    partial void OnSalarioChanging(System.Nullable<decimal> value);
    partial void OnSalarioChanged();
    partial void OnCargoChanging(string value);
    partial void OnCargoChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnFechaNacChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaNacChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnGeneroChanging(string value);
    partial void OnGeneroChanged();
    #endregion
		
		public Empleado()
		{
			this._ArregloFloral_Cliente = new EntitySet<ArregloFloral_Cliente>(new Action<ArregloFloral_Cliente>(this.attach_ArregloFloral_Cliente), new Action<ArregloFloral_Cliente>(this.detach_ArregloFloral_Cliente));
			this._Paisajismo_Empleado = new EntitySet<Paisajismo_Empleado>(new Action<Paisajismo_Empleado>(this.attach_Paisajismo_Empleado), new Action<Paisajismo_Empleado>(this.detach_Paisajismo_Empleado));
			this._Suministro = new EntitySet<Suministro>(new Action<Suministro>(this.attach_Suministro), new Action<Suministro>(this.detach_Suministro));
			this._Tarea_Empleado = new EntitySet<Tarea_Empleado>(new Action<Tarea_Empleado>(this.attach_Tarea_Empleado), new Action<Tarea_Empleado>(this.detach_Tarea_Empleado));
			this._Cargo1 = default(EntityRef<Cargo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CargoID", DbType="Int")]
		public System.Nullable<int> CargoID
		{
			get
			{
				return this._CargoID;
			}
			set
			{
				if ((this._CargoID != value))
				{
					if (this._Cargo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCargoIDChanging(value);
					this.SendPropertyChanging();
					this._CargoID = value;
					this.SendPropertyChanged("CargoID");
					this.OnCargoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_de_Contrato", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_de_Contrato
		{
			get
			{
				return this._Fecha_de_Contrato;
			}
			set
			{
				if ((this._Fecha_de_Contrato != value))
				{
					this.OnFecha_de_ContratoChanging(value);
					this.SendPropertyChanging();
					this._Fecha_de_Contrato = value;
					this.SendPropertyChanged("Fecha_de_Contrato");
					this.OnFecha_de_ContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salario", DbType="Money")]
		public System.Nullable<decimal> Salario
		{
			get
			{
				return this._Salario;
			}
			set
			{
				if ((this._Salario != value))
				{
					this.OnSalarioChanging(value);
					this.SendPropertyChanging();
					this._Salario = value;
					this.SendPropertyChanged("Salario");
					this.OnSalarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="VarChar(30)")]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this.OnCargoChanging(value);
					this.SendPropertyChanging();
					this._Cargo = value;
					this.SendPropertyChanged("Cargo");
					this.OnCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="VarChar(11)")]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(50)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(10)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNac", DbType="Date")]
		public System.Nullable<System.DateTime> FechaNac
		{
			get
			{
				return this._FechaNac;
			}
			set
			{
				if ((this._FechaNac != value))
				{
					this.OnFechaNacChanging(value);
					this.SendPropertyChanging();
					this._FechaNac = value;
					this.SendPropertyChanged("FechaNac");
					this.OnFechaNacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(25)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(25)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="VarChar(25)")]
		public string Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this.OnGeneroChanging(value);
					this.SendPropertyChanging();
					this._Genero = value;
					this.SendPropertyChanged("Genero");
					this.OnGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_ArregloFloral_Cliente", Storage="_ArregloFloral_Cliente", ThisKey="EmpID", OtherKey="EmpID")]
		public EntitySet<ArregloFloral_Cliente> ArregloFloral_Cliente
		{
			get
			{
				return this._ArregloFloral_Cliente;
			}
			set
			{
				this._ArregloFloral_Cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Paisajismo_Empleado", Storage="_Paisajismo_Empleado", ThisKey="EmpID", OtherKey="EmpID")]
		public EntitySet<Paisajismo_Empleado> Paisajismo_Empleado
		{
			get
			{
				return this._Paisajismo_Empleado;
			}
			set
			{
				this._Paisajismo_Empleado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Suministro", Storage="_Suministro", ThisKey="EmpID", OtherKey="EmpID")]
		public EntitySet<Suministro> Suministro
		{
			get
			{
				return this._Suministro;
			}
			set
			{
				this._Suministro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Tarea_Empleado", Storage="_Tarea_Empleado", ThisKey="EmpID", OtherKey="EmpID")]
		public EntitySet<Tarea_Empleado> Tarea_Empleado
		{
			get
			{
				return this._Tarea_Empleado;
			}
			set
			{
				this._Tarea_Empleado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Empleado", Storage="_Cargo1", ThisKey="CargoID", OtherKey="CargoID", IsForeignKey=true)]
		public Cargo Cargo1
		{
			get
			{
				return this._Cargo1.Entity;
			}
			set
			{
				Cargo previousValue = this._Cargo1.Entity;
				if (((previousValue != value) 
							|| (this._Cargo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cargo1.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Cargo1.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._CargoID = value.CargoID;
					}
					else
					{
						this._CargoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cargo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArregloFloral_Cliente(ArregloFloral_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_ArregloFloral_Cliente(ArregloFloral_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
		
		private void attach_Paisajismo_Empleado(Paisajismo_Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Paisajismo_Empleado(Paisajismo_Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
		
		private void attach_Suministro(Suministro entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Suministro(Suministro entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
		
		private void attach_Tarea_Empleado(Tarea_Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Tarea_Empleado(Tarea_Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cargo")]
	public partial class Cargo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CargoID;
		
		private string _Cargo1;
		
		private string _Descripcion;
		
		private string _Beneficios;
		
		private EntitySet<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCargoIDChanging(int value);
    partial void OnCargoIDChanged();
    partial void OnCargo1Changing(string value);
    partial void OnCargo1Changed();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnBeneficiosChanging(string value);
    partial void OnBeneficiosChanged();
    #endregion
		
		public Cargo()
		{
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CargoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CargoID
		{
			get
			{
				return this._CargoID;
			}
			set
			{
				if ((this._CargoID != value))
				{
					this.OnCargoIDChanging(value);
					this.SendPropertyChanging();
					this._CargoID = value;
					this.SendPropertyChanged("CargoID");
					this.OnCargoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Cargo", Storage="_Cargo1", DbType="VarChar(50)")]
		public string Cargo1
		{
			get
			{
				return this._Cargo1;
			}
			set
			{
				if ((this._Cargo1 != value))
				{
					this.OnCargo1Changing(value);
					this.SendPropertyChanging();
					this._Cargo1 = value;
					this.SendPropertyChanged("Cargo1");
					this.OnCargo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beneficios", DbType="VarChar(100)")]
		public string Beneficios
		{
			get
			{
				return this._Beneficios;
			}
			set
			{
				if ((this._Beneficios != value))
				{
					this.OnBeneficiosChanging(value);
					this.SendPropertyChanging();
					this._Beneficios = value;
					this.SendPropertyChanged("Beneficios");
					this.OnBeneficiosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cargo_Empleado", Storage="_Empleado", ThisKey="CargoID", OtherKey="CargoID")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Cargo1 = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Cargo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArregloFloral")]
	public partial class ArregloFloral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArregloID;
		
		private string _Descripcion;
		
		private System.Nullable<decimal> _Precio_de_Complejidad;
		
		private EntitySet<ArregloFloral_Cliente> _ArregloFloral_Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArregloIDChanging(int value);
    partial void OnArregloIDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecio_de_ComplejidadChanging(System.Nullable<decimal> value);
    partial void OnPrecio_de_ComplejidadChanged();
    #endregion
		
		public ArregloFloral()
		{
			this._ArregloFloral_Cliente = new EntitySet<ArregloFloral_Cliente>(new Action<ArregloFloral_Cliente>(this.attach_ArregloFloral_Cliente), new Action<ArregloFloral_Cliente>(this.detach_ArregloFloral_Cliente));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArregloID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArregloID
		{
			get
			{
				return this._ArregloID;
			}
			set
			{
				if ((this._ArregloID != value))
				{
					this.OnArregloIDChanging(value);
					this.SendPropertyChanging();
					this._ArregloID = value;
					this.SendPropertyChanged("ArregloID");
					this.OnArregloIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio_de_Complejidad", DbType="Money")]
		public System.Nullable<decimal> Precio_de_Complejidad
		{
			get
			{
				return this._Precio_de_Complejidad;
			}
			set
			{
				if ((this._Precio_de_Complejidad != value))
				{
					this.OnPrecio_de_ComplejidadChanging(value);
					this.SendPropertyChanging();
					this._Precio_de_Complejidad = value;
					this.SendPropertyChanged("Precio_de_Complejidad");
					this.OnPrecio_de_ComplejidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArregloFloral_ArregloFloral_Cliente", Storage="_ArregloFloral_Cliente", ThisKey="ArregloID", OtherKey="ArregloID")]
		public EntitySet<ArregloFloral_Cliente> ArregloFloral_Cliente
		{
			get
			{
				return this._ArregloFloral_Cliente;
			}
			set
			{
				this._ArregloFloral_Cliente.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArregloFloral_Cliente(ArregloFloral_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.ArregloFloral = this;
		}
		
		private void detach_ArregloFloral_Cliente(ArregloFloral_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.ArregloFloral = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArregloFloral_Cliente")]
	public partial class ArregloFloral_Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Arreglo_clienteID;
		
		private System.Nullable<int> _EmpID;
		
		private System.Nullable<int> _ClienteID;
		
		private System.Nullable<int> _ArregloID;
		
		private System.Nullable<System.DateTime> _Fecha_Inicial;
		
		private System.Nullable<System.DateTime> _DeadLine;
		
		private System.Nullable<int> _Cantidad;
		
		private EntityRef<ArregloFloral> _ArregloFloral;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArreglo_clienteIDChanging(int value);
    partial void OnArreglo_clienteIDChanged();
    partial void OnEmpIDChanging(System.Nullable<int> value);
    partial void OnEmpIDChanged();
    partial void OnClienteIDChanging(System.Nullable<int> value);
    partial void OnClienteIDChanged();
    partial void OnArregloIDChanging(System.Nullable<int> value);
    partial void OnArregloIDChanged();
    partial void OnFecha_InicialChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_InicialChanged();
    partial void OnDeadLineChanging(System.Nullable<System.DateTime> value);
    partial void OnDeadLineChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    #endregion
		
		public ArregloFloral_Cliente()
		{
			this._ArregloFloral = default(EntityRef<ArregloFloral>);
			this._Empleado = default(EntityRef<Empleado>);
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arreglo_clienteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Arreglo_clienteID
		{
			get
			{
				return this._Arreglo_clienteID;
			}
			set
			{
				if ((this._Arreglo_clienteID != value))
				{
					this.OnArreglo_clienteIDChanging(value);
					this.SendPropertyChanging();
					this._Arreglo_clienteID = value;
					this.SendPropertyChanged("Arreglo_clienteID");
					this.OnArreglo_clienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int")]
		public System.Nullable<int> EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteID", DbType="Int")]
		public System.Nullable<int> ClienteID
		{
			get
			{
				return this._ClienteID;
			}
			set
			{
				if ((this._ClienteID != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteIDChanging(value);
					this.SendPropertyChanging();
					this._ClienteID = value;
					this.SendPropertyChanged("ClienteID");
					this.OnClienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArregloID", DbType="Int")]
		public System.Nullable<int> ArregloID
		{
			get
			{
				return this._ArregloID;
			}
			set
			{
				if ((this._ArregloID != value))
				{
					if (this._ArregloFloral.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArregloIDChanging(value);
					this.SendPropertyChanging();
					this._ArregloID = value;
					this.SendPropertyChanged("ArregloID");
					this.OnArregloIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Inicial", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Inicial
		{
			get
			{
				return this._Fecha_Inicial;
			}
			set
			{
				if ((this._Fecha_Inicial != value))
				{
					this.OnFecha_InicialChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Inicial = value;
					this.SendPropertyChanged("Fecha_Inicial");
					this.OnFecha_InicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeadLine", DbType="Date")]
		public System.Nullable<System.DateTime> DeadLine
		{
			get
			{
				return this._DeadLine;
			}
			set
			{
				if ((this._DeadLine != value))
				{
					this.OnDeadLineChanging(value);
					this.SendPropertyChanging();
					this._DeadLine = value;
					this.SendPropertyChanged("DeadLine");
					this.OnDeadLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArregloFloral_ArregloFloral_Cliente", Storage="_ArregloFloral", ThisKey="ArregloID", OtherKey="ArregloID", IsForeignKey=true)]
		public ArregloFloral ArregloFloral
		{
			get
			{
				return this._ArregloFloral.Entity;
			}
			set
			{
				ArregloFloral previousValue = this._ArregloFloral.Entity;
				if (((previousValue != value) 
							|| (this._ArregloFloral.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArregloFloral.Entity = null;
						previousValue.ArregloFloral_Cliente.Remove(this);
					}
					this._ArregloFloral.Entity = value;
					if ((value != null))
					{
						value.ArregloFloral_Cliente.Add(this);
						this._ArregloID = value.ArregloID;
					}
					else
					{
						this._ArregloID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ArregloFloral");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_ArregloFloral_Cliente", Storage="_Empleado", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.ArregloFloral_Cliente.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.ArregloFloral_Cliente.Add(this);
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_ArregloFloral_Cliente", Storage="_Cliente", ThisKey="ClienteID", OtherKey="ClienteID", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.ArregloFloral_Cliente.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.ArregloFloral_Cliente.Add(this);
						this._ClienteID = value.ClienteID;
					}
					else
					{
						this._ClienteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClienteID;
		
		private string _Nombre;
		
		private string _Correo;
		
		private string _Telefono;
		
		private EntitySet<ArregloFloral_Cliente> _ArregloFloral_Cliente;
		
		private EntitySet<Paisajismo> _Paisajismo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClienteIDChanging(int value);
    partial void OnClienteIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Cliente()
		{
			this._ArregloFloral_Cliente = new EntitySet<ArregloFloral_Cliente>(new Action<ArregloFloral_Cliente>(this.attach_ArregloFloral_Cliente), new Action<ArregloFloral_Cliente>(this.detach_ArregloFloral_Cliente));
			this._Paisajismo = new EntitySet<Paisajismo>(new Action<Paisajismo>(this.attach_Paisajismo), new Action<Paisajismo>(this.detach_Paisajismo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClienteID
		{
			get
			{
				return this._ClienteID;
			}
			set
			{
				if ((this._ClienteID != value))
				{
					this.OnClienteIDChanging(value);
					this.SendPropertyChanging();
					this._ClienteID = value;
					this.SendPropertyChanged("ClienteID");
					this.OnClienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(25)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(50)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(10)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_ArregloFloral_Cliente", Storage="_ArregloFloral_Cliente", ThisKey="ClienteID", OtherKey="ClienteID")]
		public EntitySet<ArregloFloral_Cliente> ArregloFloral_Cliente
		{
			get
			{
				return this._ArregloFloral_Cliente;
			}
			set
			{
				this._ArregloFloral_Cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Paisajismo", Storage="_Paisajismo", ThisKey="ClienteID", OtherKey="ClienteID")]
		public EntitySet<Paisajismo> Paisajismo
		{
			get
			{
				return this._Paisajismo;
			}
			set
			{
				this._Paisajismo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArregloFloral_Cliente(ArregloFloral_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_ArregloFloral_Cliente(ArregloFloral_Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Paisajismo(Paisajismo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Paisajismo(Paisajismo entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paisajismo")]
	public partial class Paisajismo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaisaID;
		
		private System.Nullable<int> _ClienteID;
		
		private string _Descripcion;
		
		private System.Nullable<int> _Precio_Cliente;
		
		private System.Nullable<decimal> _Presupuesto;
		
		private System.Nullable<System.DateTime> _Fecha_Inicial;
		
		private System.Nullable<System.DateTime> _DeadLine;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaisaIDChanging(int value);
    partial void OnPaisaIDChanged();
    partial void OnClienteIDChanging(System.Nullable<int> value);
    partial void OnClienteIDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecio_ClienteChanging(System.Nullable<int> value);
    partial void OnPrecio_ClienteChanged();
    partial void OnPresupuestoChanging(System.Nullable<decimal> value);
    partial void OnPresupuestoChanged();
    partial void OnFecha_InicialChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_InicialChanged();
    partial void OnDeadLineChanging(System.Nullable<System.DateTime> value);
    partial void OnDeadLineChanged();
    #endregion
		
		public Paisajismo()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaisaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaisaID
		{
			get
			{
				return this._PaisaID;
			}
			set
			{
				if ((this._PaisaID != value))
				{
					this.OnPaisaIDChanging(value);
					this.SendPropertyChanging();
					this._PaisaID = value;
					this.SendPropertyChanged("PaisaID");
					this.OnPaisaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteID", DbType="Int")]
		public System.Nullable<int> ClienteID
		{
			get
			{
				return this._ClienteID;
			}
			set
			{
				if ((this._ClienteID != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteIDChanging(value);
					this.SendPropertyChanging();
					this._ClienteID = value;
					this.SendPropertyChanged("ClienteID");
					this.OnClienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio_Cliente", DbType="Int")]
		public System.Nullable<int> Precio_Cliente
		{
			get
			{
				return this._Precio_Cliente;
			}
			set
			{
				if ((this._Precio_Cliente != value))
				{
					this.OnPrecio_ClienteChanging(value);
					this.SendPropertyChanging();
					this._Precio_Cliente = value;
					this.SendPropertyChanged("Precio_Cliente");
					this.OnPrecio_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presupuesto", DbType="Money")]
		public System.Nullable<decimal> Presupuesto
		{
			get
			{
				return this._Presupuesto;
			}
			set
			{
				if ((this._Presupuesto != value))
				{
					this.OnPresupuestoChanging(value);
					this.SendPropertyChanging();
					this._Presupuesto = value;
					this.SendPropertyChanged("Presupuesto");
					this.OnPresupuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Inicial", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_Inicial
		{
			get
			{
				return this._Fecha_Inicial;
			}
			set
			{
				if ((this._Fecha_Inicial != value))
				{
					this.OnFecha_InicialChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Inicial = value;
					this.SendPropertyChanged("Fecha_Inicial");
					this.OnFecha_InicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeadLine", DbType="Date")]
		public System.Nullable<System.DateTime> DeadLine
		{
			get
			{
				return this._DeadLine;
			}
			set
			{
				if ((this._DeadLine != value))
				{
					this.OnDeadLineChanging(value);
					this.SendPropertyChanging();
					this._DeadLine = value;
					this.SendPropertyChanged("DeadLine");
					this.OnDeadLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Paisajismo", Storage="_Cliente", ThisKey="ClienteID", OtherKey="ClienteID", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Paisajismo.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Paisajismo.Add(this);
						this._ClienteID = value.ClienteID;
					}
					else
					{
						this._ClienteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paisajismo_Empleado")]
	public partial class Paisajismo_Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaisaID;
		
		private System.Nullable<int> _EmpID;
		
		private string _Localizacion;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaisaIDChanging(int value);
    partial void OnPaisaIDChanged();
    partial void OnEmpIDChanging(System.Nullable<int> value);
    partial void OnEmpIDChanged();
    partial void OnLocalizacionChanging(string value);
    partial void OnLocalizacionChanged();
    #endregion
		
		public Paisajismo_Empleado()
		{
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaisaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaisaID
		{
			get
			{
				return this._PaisaID;
			}
			set
			{
				if ((this._PaisaID != value))
				{
					this.OnPaisaIDChanging(value);
					this.SendPropertyChanging();
					this._PaisaID = value;
					this.SendPropertyChanged("PaisaID");
					this.OnPaisaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int")]
		public System.Nullable<int> EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localizacion", DbType="VarChar(100)")]
		public string Localizacion
		{
			get
			{
				return this._Localizacion;
			}
			set
			{
				if ((this._Localizacion != value))
				{
					this.OnLocalizacionChanging(value);
					this.SendPropertyChanging();
					this._Localizacion = value;
					this.SendPropertyChanged("Localizacion");
					this.OnLocalizacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Paisajismo_Empleado", Storage="_Empleado", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Paisajismo_Empleado.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Paisajismo_Empleado.Add(this);
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suministro")]
	public partial class Suministro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SumID;
		
		private System.Nullable<int> _TipoID;
		
		private System.Nullable<int> _EmpID;
		
		private System.Nullable<decimal> _Presupuesto;
		
		private System.Nullable<System.DateTime> _Fecha_de_Salida;
		
		private System.Nullable<int> _Cantidad;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<Tipo> _Tipo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSumIDChanging(int value);
    partial void OnSumIDChanged();
    partial void OnTipoIDChanging(System.Nullable<int> value);
    partial void OnTipoIDChanged();
    partial void OnEmpIDChanging(System.Nullable<int> value);
    partial void OnEmpIDChanged();
    partial void OnPresupuestoChanging(System.Nullable<decimal> value);
    partial void OnPresupuestoChanged();
    partial void OnFecha_de_SalidaChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_de_SalidaChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    #endregion
		
		public Suministro()
		{
			this._Empleado = default(EntityRef<Empleado>);
			this._Tipo = default(EntityRef<Tipo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SumID
		{
			get
			{
				return this._SumID;
			}
			set
			{
				if ((this._SumID != value))
				{
					this.OnSumIDChanging(value);
					this.SendPropertyChanging();
					this._SumID = value;
					this.SendPropertyChanged("SumID");
					this.OnSumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoID", DbType="Int")]
		public System.Nullable<int> TipoID
		{
			get
			{
				return this._TipoID;
			}
			set
			{
				if ((this._TipoID != value))
				{
					if (this._Tipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoIDChanging(value);
					this.SendPropertyChanging();
					this._TipoID = value;
					this.SendPropertyChanged("TipoID");
					this.OnTipoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int")]
		public System.Nullable<int> EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Presupuesto", DbType="Money")]
		public System.Nullable<decimal> Presupuesto
		{
			get
			{
				return this._Presupuesto;
			}
			set
			{
				if ((this._Presupuesto != value))
				{
					this.OnPresupuestoChanging(value);
					this.SendPropertyChanging();
					this._Presupuesto = value;
					this.SendPropertyChanged("Presupuesto");
					this.OnPresupuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_de_Salida", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha_de_Salida
		{
			get
			{
				return this._Fecha_de_Salida;
			}
			set
			{
				if ((this._Fecha_de_Salida != value))
				{
					this.OnFecha_de_SalidaChanging(value);
					this.SendPropertyChanging();
					this._Fecha_de_Salida = value;
					this.SendPropertyChanged("Fecha_de_Salida");
					this.OnFecha_de_SalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Suministro", Storage="_Empleado", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Suministro.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Suministro.Add(this);
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Suministro", Storage="_Tipo", ThisKey="TipoID", OtherKey="TipoID", IsForeignKey=true)]
		public Tipo Tipo
		{
			get
			{
				return this._Tipo.Entity;
			}
			set
			{
				Tipo previousValue = this._Tipo.Entity;
				if (((previousValue != value) 
							|| (this._Tipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo.Entity = null;
						previousValue.Suministro.Remove(this);
					}
					this._Tipo.Entity = value;
					if ((value != null))
					{
						value.Suministro.Add(this);
						this._TipoID = value.TipoID;
					}
					else
					{
						this._TipoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tipo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tarea")]
	public partial class Tarea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TareaID;
		
		private string _Descripcion;
		
		private EntitySet<Tarea_Empleado> _Tarea_Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTareaIDChanging(int value);
    partial void OnTareaIDChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Tarea()
		{
			this._Tarea_Empleado = new EntitySet<Tarea_Empleado>(new Action<Tarea_Empleado>(this.attach_Tarea_Empleado), new Action<Tarea_Empleado>(this.detach_Tarea_Empleado));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TareaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TareaID
		{
			get
			{
				return this._TareaID;
			}
			set
			{
				if ((this._TareaID != value))
				{
					this.OnTareaIDChanging(value);
					this.SendPropertyChanging();
					this._TareaID = value;
					this.SendPropertyChanged("TareaID");
					this.OnTareaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarea_Tarea_Empleado", Storage="_Tarea_Empleado", ThisKey="TareaID", OtherKey="TareaID")]
		public EntitySet<Tarea_Empleado> Tarea_Empleado
		{
			get
			{
				return this._Tarea_Empleado;
			}
			set
			{
				this._Tarea_Empleado.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tarea_Empleado(Tarea_Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Tarea = this;
		}
		
		private void detach_Tarea_Empleado(Tarea_Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Tarea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tarea_Empleado")]
	public partial class Tarea_Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tarea_empID;
		
		private System.Nullable<int> _EmpID;
		
		private System.Nullable<int> _TareaID;
		
		private System.Nullable<System.TimeSpan> _Horario;
		
		private string _Localizacion;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<Tarea> _Tarea;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTarea_empIDChanging(int value);
    partial void OnTarea_empIDChanged();
    partial void OnEmpIDChanging(System.Nullable<int> value);
    partial void OnEmpIDChanged();
    partial void OnTareaIDChanging(System.Nullable<int> value);
    partial void OnTareaIDChanged();
    partial void OnHorarioChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHorarioChanged();
    partial void OnLocalizacionChanging(string value);
    partial void OnLocalizacionChanged();
    #endregion
		
		public Tarea_Empleado()
		{
			this._Empleado = default(EntityRef<Empleado>);
			this._Tarea = default(EntityRef<Tarea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarea_empID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Tarea_empID
		{
			get
			{
				return this._Tarea_empID;
			}
			set
			{
				if ((this._Tarea_empID != value))
				{
					this.OnTarea_empIDChanging(value);
					this.SendPropertyChanging();
					this._Tarea_empID = value;
					this.SendPropertyChanged("Tarea_empID");
					this.OnTarea_empIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int")]
		public System.Nullable<int> EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TareaID", DbType="Int")]
		public System.Nullable<int> TareaID
		{
			get
			{
				return this._TareaID;
			}
			set
			{
				if ((this._TareaID != value))
				{
					if (this._Tarea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTareaIDChanging(value);
					this.SendPropertyChanging();
					this._TareaID = value;
					this.SendPropertyChanged("TareaID");
					this.OnTareaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Horario", DbType="Time")]
		public System.Nullable<System.TimeSpan> Horario
		{
			get
			{
				return this._Horario;
			}
			set
			{
				if ((this._Horario != value))
				{
					this.OnHorarioChanging(value);
					this.SendPropertyChanging();
					this._Horario = value;
					this.SendPropertyChanged("Horario");
					this.OnHorarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localizacion", DbType="VarChar(200)")]
		public string Localizacion
		{
			get
			{
				return this._Localizacion;
			}
			set
			{
				if ((this._Localizacion != value))
				{
					this.OnLocalizacionChanging(value);
					this.SendPropertyChanging();
					this._Localizacion = value;
					this.SendPropertyChanged("Localizacion");
					this.OnLocalizacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Tarea_Empleado", Storage="_Empleado", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Tarea_Empleado.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Tarea_Empleado.Add(this);
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarea_Tarea_Empleado", Storage="_Tarea", ThisKey="TareaID", OtherKey="TareaID", IsForeignKey=true)]
		public Tarea Tarea
		{
			get
			{
				return this._Tarea.Entity;
			}
			set
			{
				Tarea previousValue = this._Tarea.Entity;
				if (((previousValue != value) 
							|| (this._Tarea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tarea.Entity = null;
						previousValue.Tarea_Empleado.Remove(this);
					}
					this._Tarea.Entity = value;
					if ((value != null))
					{
						value.Tarea_Empleado.Add(this);
						this._TareaID = value.TareaID;
					}
					else
					{
						this._TareaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tarea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tipo")]
	public partial class Tipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipoID;
		
		private string _Nombre;
		
		private string _Informaciones;
		
		private EntitySet<Suministro> _Suministro;
		
		private EntitySet<Unidad> _Unidad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipoIDChanging(int value);
    partial void OnTipoIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnInformacionesChanging(string value);
    partial void OnInformacionesChanged();
    #endregion
		
		public Tipo()
		{
			this._Suministro = new EntitySet<Suministro>(new Action<Suministro>(this.attach_Suministro), new Action<Suministro>(this.detach_Suministro));
			this._Unidad = new EntitySet<Unidad>(new Action<Unidad>(this.attach_Unidad), new Action<Unidad>(this.detach_Unidad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TipoID
		{
			get
			{
				return this._TipoID;
			}
			set
			{
				if ((this._TipoID != value))
				{
					this.OnTipoIDChanging(value);
					this.SendPropertyChanging();
					this._TipoID = value;
					this.SendPropertyChanged("TipoID");
					this.OnTipoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Informaciones", DbType="VarChar(200)")]
		public string Informaciones
		{
			get
			{
				return this._Informaciones;
			}
			set
			{
				if ((this._Informaciones != value))
				{
					this.OnInformacionesChanging(value);
					this.SendPropertyChanging();
					this._Informaciones = value;
					this.SendPropertyChanged("Informaciones");
					this.OnInformacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Suministro", Storage="_Suministro", ThisKey="TipoID", OtherKey="TipoID")]
		public EntitySet<Suministro> Suministro
		{
			get
			{
				return this._Suministro;
			}
			set
			{
				this._Suministro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Unidad", Storage="_Unidad", ThisKey="TipoID", OtherKey="TipoID")]
		public EntitySet<Unidad> Unidad
		{
			get
			{
				return this._Unidad;
			}
			set
			{
				this._Unidad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Suministro(Suministro entity)
		{
			this.SendPropertyChanging();
			entity.Tipo = this;
		}
		
		private void detach_Suministro(Suministro entity)
		{
			this.SendPropertyChanging();
			entity.Tipo = null;
		}
		
		private void attach_Unidad(Unidad entity)
		{
			this.SendPropertyChanging();
			entity.Tipo = this;
		}
		
		private void detach_Unidad(Unidad entity)
		{
			this.SendPropertyChanging();
			entity.Tipo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unidad")]
	public partial class Unidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnidadID;
		
		private System.Nullable<int> _TipoID;
		
		private System.Nullable<System.DateTime> _FeExpirado;
		
		private string _Condicion;
		
		private System.Nullable<decimal> _Precio_Unidad;
		
		private EntityRef<Tipo> _Tipo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnidadIDChanging(int value);
    partial void OnUnidadIDChanged();
    partial void OnTipoIDChanging(System.Nullable<int> value);
    partial void OnTipoIDChanged();
    partial void OnFeExpiradoChanging(System.Nullable<System.DateTime> value);
    partial void OnFeExpiradoChanged();
    partial void OnCondicionChanging(string value);
    partial void OnCondicionChanged();
    partial void OnPrecio_UnidadChanging(System.Nullable<decimal> value);
    partial void OnPrecio_UnidadChanged();
    #endregion
		
		public Unidad()
		{
			this._Tipo = default(EntityRef<Tipo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnidadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UnidadID
		{
			get
			{
				return this._UnidadID;
			}
			set
			{
				if ((this._UnidadID != value))
				{
					this.OnUnidadIDChanging(value);
					this.SendPropertyChanging();
					this._UnidadID = value;
					this.SendPropertyChanged("UnidadID");
					this.OnUnidadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoID", DbType="Int")]
		public System.Nullable<int> TipoID
		{
			get
			{
				return this._TipoID;
			}
			set
			{
				if ((this._TipoID != value))
				{
					if (this._Tipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoIDChanging(value);
					this.SendPropertyChanging();
					this._TipoID = value;
					this.SendPropertyChanged("TipoID");
					this.OnTipoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeExpirado", DbType="Date")]
		public System.Nullable<System.DateTime> FeExpirado
		{
			get
			{
				return this._FeExpirado;
			}
			set
			{
				if ((this._FeExpirado != value))
				{
					this.OnFeExpiradoChanging(value);
					this.SendPropertyChanging();
					this._FeExpirado = value;
					this.SendPropertyChanged("FeExpirado");
					this.OnFeExpiradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condicion", DbType="VarChar(100)")]
		public string Condicion
		{
			get
			{
				return this._Condicion;
			}
			set
			{
				if ((this._Condicion != value))
				{
					this.OnCondicionChanging(value);
					this.SendPropertyChanging();
					this._Condicion = value;
					this.SendPropertyChanged("Condicion");
					this.OnCondicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio_Unidad", DbType="Money")]
		public System.Nullable<decimal> Precio_Unidad
		{
			get
			{
				return this._Precio_Unidad;
			}
			set
			{
				if ((this._Precio_Unidad != value))
				{
					this.OnPrecio_UnidadChanging(value);
					this.SendPropertyChanging();
					this._Precio_Unidad = value;
					this.SendPropertyChanged("Precio_Unidad");
					this.OnPrecio_UnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipo_Unidad", Storage="_Tipo", ThisKey="TipoID", OtherKey="TipoID", IsForeignKey=true)]
		public Tipo Tipo
		{
			get
			{
				return this._Tipo.Entity;
			}
			set
			{
				Tipo previousValue = this._Tipo.Entity;
				if (((previousValue != value) 
							|| (this._Tipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipo.Entity = null;
						previousValue.Unidad.Remove(this);
					}
					this._Tipo.Entity = value;
					if ((value != null))
					{
						value.Unidad.Add(this);
						this._TipoID = value.TipoID;
					}
					else
					{
						this._TipoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tipo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsuarioID;
		
		private string _usuario1;
		
		private string _contrase;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuarioIDChanging(int value);
    partial void OnUsuarioIDChanged();
    partial void Onusuario1Changing(string value);
    partial void Onusuario1Changed();
    partial void OncontraseChanging(string value);
    partial void OncontraseChanged();
    #endregion
		
		public Usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					this.OnUsuarioIDChanging(value);
					this.SendPropertyChanging();
					this._UsuarioID = value;
					this.SendPropertyChanged("UsuarioID");
					this.OnUsuarioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="usuario", Storage="_usuario1", DbType="VarChar(20)")]
		public string usuario1
		{
			get
			{
				return this._usuario1;
			}
			set
			{
				if ((this._usuario1 != value))
				{
					this.Onusuario1Changing(value);
					this.SendPropertyChanging();
					this._usuario1 = value;
					this.SendPropertyChanged("usuario1");
					this.Onusuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrase", DbType="VarChar(20)")]
		public string contrase
		{
			get
			{
				return this._contrase;
			}
			set
			{
				if ((this._contrase != value))
				{
					this.OncontraseChanging(value);
					this.SendPropertyChanging();
					this._contrase = value;
					this.SendPropertyChanged("contrase");
					this.OncontraseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ValidarUsuarioResult
	{
		
		private int _UsuarioID;
		
		private string _usuario;
		
		private string _contrase;
		
		public ValidarUsuarioResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioID", DbType="Int NOT NULL")]
		public int UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					this._UsuarioID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="VarChar(20)")]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this._usuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrase", DbType="VarChar(20)")]
		public string contrase
		{
			get
			{
				return this._contrase;
			}
			set
			{
				if ((this._contrase != value))
				{
					this._contrase = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
